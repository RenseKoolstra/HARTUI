name: End-to-end tests
on: 
  push:
    branches-ignore:
      - master  # Ignore pushes to master, only trigger on feature branches
permissions:
  contents: write
  pull-requests: write
jobs:
  cypress-run:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      # Install npm dependencies, cache them correctly
      # and run all Cypress tests
      - name: Cypress run
        uses: cypress-io/github-action@v6        
      - name: safe screenshots
        if: always()
        # Set up Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add -f cypress/screenshots/*

          if [ -d "cypress/snapshots" ] && find cypress/snapshots -type d -name "_diff_output" | grep .; then
            # Check if there are new or modified files in _diff_output
            if git ls-files --others --modified --exclude-standard cypress/snapshots/*/_diff_output/* | grep .; then
              git add -f cypress/snapshots/*/_diff_output/*
                # Check if there are staged changes before committing
                if git diff --cached --exit-code; then
                  echo "No changes to commit."
                else
                  git commit -m "Add updated Cypress diff screenshots"
                  git push origin -u HEAD
                fi
              else
                echo "No new files to add."
              fi
            else
              echo "No _diff_output directories found. Skipping commit step."
          fi
          
        
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  merge-branch:
    runs-on: ubuntu-24.04
    needs: cypress-run
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for all branches
      - name: Configure git
        # Set up Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
      - name: Pull latest changes
        run: git pull origin master
      - name: Merge Branch into Master
        run: |         
          # Checkout master and merge the branch
          git checkout master
          git merge --no-ff --allow-unrelated-histories "${{ github.ref_name }}" -m "Auto-merging ${{ github.ref_name }} into master" 
          # Push the changes
          git push origin master
      - name: Delete Branch After Merge
        if: success()
        run: |
          echo "Deleting branch ${{ github.ref_name }}..."
          git push origin --delete "${{ github.ref_name }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
